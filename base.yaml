# Camunda Helm chart.

global:
  ingress:
    enabled: true
    className: nginx
    host: "txnflow.txninfra.com"  # Set the external IP or domain
    annotations:
    ## @skip identityKeycloak.ingress.annotations.nginx.ingress.kubernetes.io/proxy-buffer-size
      nginx.ingress.kubernetes.io/proxy-buffer-size: '256k'
      nginx.ingress.kubernetes.io/proxy-buffering: 'on'

  identity:
    auth:
      keycloak:
        tls:
          enabled: true
          existingSecret: "tls-secret"
          usePem: true
      issuerBackendUrl: "http://{{.Release.Name}}-keycloak.default.svc.cluster.local:18080/auth/realms/camunda-platform"
      publicIssuerUrl: "https://txnflow.txninfra.com/auth/realms/camunda-platform"  # Identity URL
      # tokenUrl: 
      operate:
        redirectUrl: "https://txnflow.txninfra.com/operate"  # Operate redirect URL
        existingSecret:
          name: identity-secret-for-components
      tasklist:
        redirectUrl: "https://txnflow.txninfra.com/tasklist"  # Tasklist redirect URL
        existingSecret:
          name: identity-secret-for-components
      optimize:
        redirectUrl: "https://txnflow.txninfra.com/optimize"  # Optimize redirect URL
        existingSecret:
          name: identity-secret-for-components
      webModeler:
        redirectUrl: "https://txnflow.txninfra.com/modeler"  # Web Modeler redirect URL
        existingSecret:
          name: identity-secret-for-components
      console:
        redirectUrl: "https://txnflow.txninfra.com/console"  # Console redirect URL
        existingSecret:
          name: identity-secret-for-components
      connectors:
        existingSecret:
          name: identity-secret-for-components
      zeebe:
        existingSecret:
          name: identity-secret-for-components

identityKeycloak:
  # image:
  #   repository: bitnami/keycloak
  #   tag: 25.0.6
  postgresql:
    enabled: true
    # httpss://hub.docker.com/r/bitnami/postgresql/tags
    # image:
    #   repository: bitnami/postgresql
    #   tag: 15.8.0
    # auth:
    #   existingSecret: identity-secret-for-components
  enabled: true
  production: true
  # auth:
  #   existingSecret: identity-secret-for-components
  tls:
    enabled: true
    autoGenerated: true
  contextPath: "/auth"
  url:
    protocol: "https"
    host: "camunda-keycloak.default.svc.cluster.local"
    port: "8443"

identity:
  image:
    repository: camunda/identity
    tag: 8.6.4
  contextPath: "/identity"
  # fullURL: "https://txnflow.txninfra.com/identity"  # Full URL for identity service

operate:
  image:
    tag: 8.6.3
  contextPath: "/operate"
  # fullURL: "https://txnflow.txninfra.com/operate"

optimize:
  image:
    repository: camunda/optimize
    tag: 8.6.2
  contextPath: "/optimize"
  # fullURL: "https://txnflow.txninfra.com/optimize"

tasklist:
  image:
    repository: camunda/tasklist
    tag: 8.6.5
  contextPath: "/tasklist"
  # fullURL: "https://txnflow.txninfra.com/tasklist"

webModeler:
  image:
    # renovate: datasource=docker depName=camunda/web-modeler-restapi
    tag: 8.6.3
  contextPath: "/modeler"
  # fullURL: "https://txnflow.txninfra.com/modeler"

console:
  image:
    tag: 8.6.10
  contextPath: "/console"
  # fullURL: "https://txnflow.txninfra.com/console"

connectors:
  image:
    repository: camunda/connectors-bundle
    tag: 8.6.4
  contextPath: "/connectors"
  # fullURL: "https://txnflow.txninfra.com/connectors"

zeebe:
  # httpss://hub.docker.com/r/camunda/zeebe/tags
  image:
    repository: camunda/zeebe
    tag: 8.6.5
  contextPath: "/zeebe"
  # fullURL: "https://txnflow.txninfra.com/zeebe"

zeebeGateway:
  image:
    repository: camunda/zeebe
    tag: 8.6.5
  ingress:
    grpc:
      enabled: true
      className: nginx
      host: "txnflow.txninfra.com"  # gRPC Zeebe Gateway URL

#
# Elasticsearch
#

elasticsearch:
  # httpss://hub.docker.com/r/bitnami/elasticsearch/tags
  enabled: true
  image:
    repository: bitnami/elasticsearch
    tag: 8.15.3
    # contextPath: "/elasticsearch"
    # fullURL: "https://txnflow.txninfra.com/elasticsearch"
  url:
    host: 
  
